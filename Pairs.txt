 process.stdin.resume();
process.stdin.setEncoding('ascii');

var input_stdin = "";
var input_stdin_array = "";
var input_currentline = 0;

process.stdin.on('data', function (data) {
    input_stdin += data;
});

process.stdin.on('end', function () {
    input_stdin_array = input_stdin.split("\n");
    main();    
});

function readLine() {
    return input_stdin_array[input_currentline++];
}

/////////////// ignore above this line ////////////////////

function pairs(k, arr) {
    // Complete this function
    var count=0;
    // arr.sort(); is not working in hacker rank.
//sort() in JS sorts in lexical order not in numerical.
//To sort numerically use sort(function(a,b){return a-b;})(ascending order)
//descending order use sort(function(a,b){return b-a;})
   // arr1=mergeSort(arr);
    //console.log(arr1);
    arr.sort(function(a,b){return a-b;});
    for(var i=0;i<arr.length;i++){
        for(var j=i+1;j<arr.length;j++){
            var diff=arr[j]-arr[i];
            if(diff>k)
                break;
            if(diff==k){
                count+=1;
                break;
            } 
        }   
    }
    return count;
    
}
/*function mergeSort(arr){
   var len = arr.length;
   if(len <2)
      return arr;
   var mid = Math.floor(len/2),
       left = arr.slice(0,mid),
       right =arr.slice(mid);
   //send left and right to the mergeSort to broke it down into pieces
   //then merge those
   return merge(mergeSort(left),mergeSort(right));
}
function merge(left, right){
  var result = [],
      lLen = left.length,
      rLen = right.length,
      l = 0,
      r = 0;
  while(l < lLen && r < rLen){
     if(left[l] < right[r]){
       result.push(left[l++]);
     }
     else{
       result.push(right[r++]);
    }
  }  
  //remaining part needs to be addred to the result
  return result.concat(left.slice(l)).concat(right.slice(r));
}
*/
function main() {
    var n_temp = readLine().split(' ');
    var n = parseInt(n_temp[0]);
    var k = parseInt(n_temp[1]);
    arr = readLine().split(' ');
    arr = arr.map(Number);
    var result = pairs(k, arr);
    process.stdout.write("" + result + "\n");

}
